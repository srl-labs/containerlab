package v1alpha2

import (
	"github.com/weaveworks/ignite/pkg/apis/ignite"
	"k8s.io/apimachinery/pkg/conversion"
)

// Convert_ignite_Runtime_To_v1alpha2_Runtime calls the autogenerated conversion function along with custom conversion logic
func Convert_ignite_Runtime_To_v1alpha2_Runtime(in *ignite.Runtime, out *Runtime, s conversion.Scope) error {
	return autoConvert_ignite_Runtime_To_v1alpha2_Runtime(in, out, s)
}

// Convert_v1alpha2_VMStatus_To_ignite_VMStatus calls the autogenerated conversion function along with custom conversion logic
func Convert_v1alpha2_VMStatus_To_ignite_VMStatus(in *VMStatus, out *ignite.VMStatus, s conversion.Scope) error {
	if err := autoConvert_v1alpha2_VMStatus_To_ignite_VMStatus(in, out, s); err != nil {
		return err
	}

	if out.Network == nil {
		out.Network = &ignite.Network{}
	}

	// Set IPAddresses to the new position, under Network block.
	out.Network.IPAddresses = in.IPAddresses

	return nil
}

// Convert_ignite_VMStatus_To_v1alpha2_VMStatus calls the autogenerated conversion function along with custom conversion logic
func Convert_ignite_VMStatus_To_v1alpha2_VMStatus(in *ignite.VMStatus, out *VMStatus, s conversion.Scope) error {
	if err := autoConvert_ignite_VMStatus_To_v1alpha2_VMStatus(in, out, s); err != nil {
		return err
	}

	// Set IPAddresses to the status root.
	out.IPAddresses = in.Network.IPAddresses

	return nil
}
